// Первая задача
'use strict'
var Tc = parseFloat(prompt('Введите температуру в градусах Цельсия'));
function TempCel(Tc) {
    let Tf = (9 / 5) * Tc + 32;
    return Tf;
}
alert('Температура по фарингейту - ' + TempCel(Tc) + ' градусов.');

// Вторая задача
let admin = NaN;
let name = prompt('Введите имя');
admin = name;
alert('Имя админа' + ' ' + admin)

// Третья задача
var a = 1000 + '108';
alert(a) // 1000108

// Четвертая Задача 
//Самостоятельно разобраться с атрибутами тега script (async и defer).
//Defer: 
//Скрипты с defer никогда не блокируют страницу.
//Скрипты с defer всегда выполняются, когда дерево DOM готово/
//Отложенные с помощью defer скрипты сохраняют порядок относительно друг друга, как и обычные скрипты. Поэтому, если сначала загружается большой скрипт, а затем меньшего размера, то последний будет ждать.

//Async
//Атрибут async означает, что скрипт абсолютно независим:
//Страница не ждёт асинхронных скриптов, содержимое обрабатывается и отображается.
//Событие DOMContentLoaded и асинхронные скрипты не ждут друг друга:
//DOM может произойти как до асинхронного скрипта (если асинхронный скрипт завершит загрузку после того, как страница будет готова),так и после асинхронного скрипта (если он короткий или уже содержится в HTTP-кеше)
//Остальные скрипты не ждут async, и скрипты c async не ждут другие скрипты.
//Так что если у нас есть несколько скриптов с async, они могут выполняться в любом порядке. То, что первое загрузится – запустится в первую очередь:
